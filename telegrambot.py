import logging
import os
from datetime import datetime
import io

import telebot
from telebot import types
import yadisk
import ftplib

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –¢–æ–∫–µ–Ω—ã Telegram –±–æ—Ç–∞ –∏ –Ø–Ω–¥–µ–∫—Å –î–∏—Å–∫–∞
TELEGRAM_TOKEN = ""
YANDEX_TOKEN = "y0_AgAAAAB2YTQOAAvg-gAAAAEGMWnBAADSDxQkRe9G26U9eFNwYpGfSYY7NQ"

# –î–∞–Ω–Ω—ã–µ –¥–ª—è FTP-—Å–µ—Ä–≤–µ—Ä–∞ (–∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–≤–æ–∏)
FTP_HOST = "94.26.225.26"
FTP_USER = "FTP"
FTP_PASSWORD = "parolnaftp"

# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ Yandex.Disk API
y = yadisk.YaDisk(token=YANDEX_TOKEN)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –Ø–Ω–¥–µ–∫—Å –î–∏—Å–∫–∞
if not y.check_token():
    raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –Ø–Ω–¥–µ–∫—Å –î–∏—Å–∫–∞")

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
bot = telebot.TeleBot(TELEGRAM_TOKEN)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
user_settings = {}

# --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---
def return_to_main_menu(chat_id):
    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    markup.row("–ü–æ–∏—Å–∫ üîç", "–ö–∞—Ç–∞–ª–æ–≥ üìÅ")
    markup.row("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è", "FAQ ‚ùì")
    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start ---
@bot.message_handler(commands=['start'])
def start_command(message):
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_settings[message.chat.id] = {
        'storage': 'yadisk',  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - –Ø–Ω–¥–µ–∫—Å –î–∏—Å–∫
        'folder': ''  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - –∫–æ—Ä–Ω–µ–≤–æ–π –∫–∞—Ç–∞–ª–æ–≥
    }
    return_to_main_menu(message.chat.id)

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è –∫–Ω–æ–ø–æ–∫) ---
@bot.message_handler(func=lambda message: True)
def handle_text(message):
    chat_id = message.chat.id
    text = message.text

    if text == "–ü–æ–∏—Å–∫ üîç":
        search_command(message)
    elif text == "–ö–∞—Ç–∞–ª–æ–≥ üìÅ":
        catalog_command(message)
    elif text == "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è":
        settings_command(message)
    elif text == "FAQ ‚ùì":
        faq_command(message)
    else:
        bot.send_message(chat_id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.")
        return_to_main_menu(chat_id)

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /settings ---
@bot.message_handler(commands=['settings'])
def settings_command(message):
    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    markup.row("–Ø–Ω–¥–µ–∫—Å –î–∏—Å–∫", "FTP")
    msg = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤:", reply_markup=markup)
    bot.register_next_step_handler(msg, process_storage_choice)

def process_storage_choice(message):
    if message.text is None:
        bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.")
        return settings_command(message)

    storage = message.text.strip()
    if storage == "–Ø–Ω–¥–µ–∫—Å –î–∏—Å–∫":
        user_settings[message.chat.id]['storage'] = 'yadisk'
        bot.send_message(message.chat.id, "–•—Ä–∞–Ω–∏–ª–∏—â–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: –Ø–Ω–¥–µ–∫—Å –î–∏—Å–∫")
    elif storage == "FTP":
        user_settings[message.chat.id]['storage'] = 'ftp'
        bot.send_message(message.chat.id, "–•—Ä–∞–Ω–∏–ª–∏—â–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: FTP")
    else:
        bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.")
        return settings_command(message)

    return_to_main_menu(message.chat.id)

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª—é–±–æ–≥–æ —Ñ–∞–π–ª–∞ ---
@bot.message_handler(content_types=['document'])
def handle_file(message):
    user_id = message.chat.id
    file_id = message.document.file_id
    file_info = bot.get_file(file_id)
    file_name = message.document.file_name

    storage = user_settings[user_id]['storage']
    folder = user_settings[user_id]['folder']

    try:
        if storage == 'yadisk':
            # --- –õ–æ–≥–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ –Ø–Ω–¥–µ–∫—Å –î–∏—Å–∫ ---
            if folder and not y.exists(f"/{folder}"):
                y.mkdir(f"/{folder}")

            file_data = bot.download_file(file_info.file_path)
            upload_path = f"/{folder}/{file_name}" if folder else file_name
            y.upload(io.BytesIO(file_data), upload_path)
            bot.send_message(user_id, f"–§–∞–π–ª '{file_name}' —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ {'–∫–æ—Ä–Ω–µ–≤–æ–º –∫–∞—Ç–∞–ª–æ–≥–µ' if not folder else f'–ø–∞–ø–∫–µ \'{folder}\''} –Ω–∞ –Ø–Ω–¥–µ–∫—Å –î–∏—Å–∫.")

        elif storage == 'ftp':
            # --- –õ–æ–≥–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ FTP-—Å–µ—Ä–≤–µ—Ä ---
            with ftplib.FTP(FTP_HOST, FTP_USER, FTP_PASSWORD) as ftp:
                if folder:
                    try:
                        ftp.cwd(folder)
                    except ftplib.error_perm:
                        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                        ftp.mkd(folder)
                        ftp.cwd(folder)

                file_data = bot.download_file(file_info.file_path)
                ftp.storbinary(f'STOR {file_name}', io.BytesIO(file_data))
                bot.send_message(user_id, f"–§–∞–π–ª '{file_name}' —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ {'–∫–æ—Ä–Ω–µ–≤–æ–º –∫–∞—Ç–∞–ª–æ–≥–µ' if not folder else f'–ø–∞–ø–∫–µ \'{folder}\''} –Ω–∞ FTP-—Å–µ—Ä–≤–µ—Ä.")
        else:
            bot.send_message(user_id, "–û—à–∏–±–∫–∞: –Ω–µ –≤—ã–±—Ä–∞–Ω —Å–ø–æ—Å–æ–± —Ö—Ä–∞–Ω–µ–Ω–∏—è.")
    except Exception as e:
        logging.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
        bot.send_message(user_id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    return_to_main_menu(user_id)

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /catalog ---
@bot.message_handler(commands=['catalog'])
def catalog_command(message):
    storage = user_settings[message.chat.id]['storage']
    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    markup.add("–û—Ç–º–µ–Ω–∞")
    markup.add("–ö–æ—Ä–Ω–µ–≤–æ–π –∫–∞—Ç–∞–ª–æ–≥")

    if storage == 'yadisk':
        try:
            folders = y.listdir("/")
            for folder in folders:
                if folder['type'] == 'dir':
                    markup.add(folder['name'])
        except Exception as e:
            logging.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–∞–ø–æ–∫: {e}")
            bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–∞–ø–æ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            return

    elif storage == 'ftp':
        try:
            with ftplib.FTP(FTP_HOST, FTP_USER, FTP_PASSWORD) as ftp:
                folders = []
                ftp.retrlines('LIST', folders.append)
                for folder in folders:
                    parts = folder.split()
                    if parts[0].startswith('d'):
                        folder_name = parts[-1]
                        markup.add(folder_name)
        except Exception as e:
            logging.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–∞–ø–æ–∫ –Ω–∞ FTP: {e}")
            bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–∞–ø–æ–∫ –Ω–∞ FTP. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            return
    else:
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞: –Ω–µ –≤—ã–±—Ä–∞–Ω —Å–ø–æ—Å–æ–± —Ö—Ä–∞–Ω–µ–Ω–∏—è.")
        return

    msg = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π:", reply_markup=markup)
    bot.register_next_step_handler(msg, process_catalog_choice)

def process_catalog_choice(message):
    if message.text is None:
        bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.")
        return catalog_command(message)

    folder = message.text.strip()
    if folder == "–û—Ç–º–µ–Ω–∞":
        return_to_main_menu(message.chat.id)
        return
    elif folder == "–ö–æ—Ä–Ω–µ–≤–æ–π –∫–∞—Ç–∞–ª–æ–≥":
        user_settings[message.chat.id]['folder'] = ""
    else:
        user_settings[message.chat.id]['folder'] = folder

    bot.send_message(message.chat.id, f"–í—ã–±—Ä–∞–Ω –∫–∞—Ç–∞–ª–æ–≥: {folder}")
    bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤ —ç—Ç—É –ø–∞–ø–∫—É.")
    return_to_main_menu(message.chat.id)

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /search ---
@bot.message_handler(commands=['search'])
def search_command(message):
    user_id = message.chat.id
    storage = user_settings[user_id]['storage']
    folder = user_settings[user_id]['folder']

    if storage == 'yadisk':
        # --- –õ–æ–≥–∏–∫–∞ –ø–æ–∏—Å–∫–∞ –Ω–∞ –Ø–Ω–¥–µ–∫—Å –î–∏—Å–∫–µ ---
        if folder:
            msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞:")
            bot.register_next_step_handler(msg, process_search_yadisk)
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.add("–î–∞", "–ù–µ—Ç")
            msg = bot.send_message(message.chat.id, "–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–∞–ª–æ–≥ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤. –•–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫ –≤ –∫–æ—Ä–Ω–µ–≤–æ–º –∫–∞—Ç–∞–ª–æ–≥–µ?", reply_markup=markup)
            bot.register_next_step_handler(msg, process_root_search_yadisk)

    elif storage == 'ftp':
        # --- –õ–æ–≥–∏–∫–∞ –ø–æ–∏—Å–∫–∞ –Ω–∞ FTP-—Å–µ—Ä–≤–µ—Ä–µ ---
        if folder:
            msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞:")
            bot.register_next_step_handler(msg, process_search_ftp)
        else:
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
            markup.add("–î–∞", "–ù–µ—Ç")
            msg = bot.send_message(message.chat.id, "–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–∞–ª–æ–≥ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤. –•–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫ –≤ –∫–æ—Ä–Ω–µ–≤–æ–º –∫–∞—Ç–∞–ª–æ–≥–µ?", reply_markup=markup)
            bot.register_next_step_handler(msg, process_root_search_ftp)

    else:
        bot.send_message(user_id, "–û—à–∏–±–∫–∞: –Ω–µ –≤—ã–±—Ä–∞–Ω —Å–ø–æ—Å–æ–± —Ö—Ä–∞–Ω–µ–Ω–∏—è.")
        return_to_main_menu(user_id)

def process_root_search_yadisk(message):
    if message.text.lower() == "–¥–∞":
        user_settings[message.chat.id]['folder'] = ""
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞:")
        bot.register_next_step_handler(msg, process_search_yadisk)
    else:
        bot.send_message(message.chat.id, "–û–∫, –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
        return_to_main_menu(message.chat.id)

def process_root_search_ftp(message):
    if message.text.lower() == "–¥–∞":
        user_settings[message.chat.id]['folder'] = ""
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞:")
        bot.register_next_step_handler(msg, process_search_ftp)
    else:
        bot.send_message(message.chat.id, "–û–∫, –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
        return_to_main_menu(message.chat.id)

def process_search_yadisk(message):
    query = message.text
    user_id = message.chat.id
    folder = user_settings[user_id]['folder']

    try:
        if not folder:
            files = y.listdir("/")
        else:
            files = y.listdir(f"/{folder}")

        search_results = [file for file in files if query.lower() in file["name"].lower()]

        if search_results:
            if len(search_results) == 1:
                file = search_results[0]
                direct_link = y.get_download_link(file["path"])
                bot.send_message(message.chat.id, f"–ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª: {direct_link}")
            else:
                file_list = "\n".join([f"- {file['name']} ({file['path']})" for file in search_results])
                bot.send_message(message.chat.id, f"–ù–∞–π–¥–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤:\n{file_list}")
        else:
            bot.send_message(message.chat.id, "–§–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
    except Exception as e:
        logging.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Ñ–∞–π–ª–æ–≤: {e}")
        bot.send_message(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Ñ–∞–π–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    return_to_main_menu(user_id)

def process_search_ftp(message):
    query = message.text
    user_id = message.chat.id
    folder = user_settings[user_id]['folder']

    try:
        with ftplib.FTP(FTP_HOST, FTP_USER, FTP_PASSWORD) as ftp:
            if folder:
                ftp.cwd(folder)  # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –ø–∞–ø–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞
            files = ftp.nlst()
            search_results = [file for file in files if query.lower() in file.lower()]

            if search_results:
                bot.send_message(message.chat.id, f"–ù–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã: {', '.join(search_results)}")
            else:
                bot.send_message(message.chat.id, "–§–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
    except Exception as e:
        logging.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Ñ–∞–π–ª–æ–≤ –Ω–∞ FTP: {e}")
        bot.send_message(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Ñ–∞–π–ª–æ–≤ –Ω–∞ FTP. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    return_to_main_menu(user_id)

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /faq ---
@bot.message_handler(commands=['faq'])
def faq_command(message):
    faq_text = """
    –°–ø–∏—Å–æ–∫ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ (FAQ):
    1. –ö–∞–∫ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª?
    –û—Ç–≤–µ—Ç: –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –≤ —á–∞—Ç, –∏ –æ–Ω –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –≤ —Ç–µ–∫—É—â—É—é –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–∞–ø–∫—É.
    
    2. –ö–∞–∫ –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª?
    –û—Ç–≤–µ—Ç: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /search, —á—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ —Ñ–∞–π–ª–∞–º –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ.
    
    3. –ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–∏–π –∫–∞—Ç–∞–ª–æ–≥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤?
    –û—Ç–≤–µ—Ç: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /catalog, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –∫–∞—Ç–∞–ª–æ–≥.
    
    4. –ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (–Ø–Ω–¥–µ–∫—Å –î–∏—Å–∫ –∏–ª–∏ FTP)?
    –û—Ç–≤–µ—Ç: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /settings –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞.
    """
    bot.send_message(message.chat.id, faq_text)
    return_to_main_menu(message.chat.id)

# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
if __name__ == '__main__':
    bot.polling(none_stop=True)
